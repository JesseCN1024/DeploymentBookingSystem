// <auto-generated />
using System;
using DbsUsersManagementService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DbsUsersManagementService.Migrations
{
    [DbContext(typeof(DbsUserAuthDbContext))]
    partial class DbsUserAuthDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("identity")
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DbsUsersManagementService.Models.Domain.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Roles", "identity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e4b257ef-3638-4156-ad81-c98692b06229"),
                            CreatedBy = new Guid("ea294873-7a8c-4c0f-bfa7-a2eb492cbf8c"),
                            CreatedDate = new DateTime(2024, 12, 28, 9, 56, 15, 416, DateTimeKind.Utc).AddTicks(5160),
                            DisplayName = "Admin",
                            IsDeleted = false,
                            Name = "ADMIN",
                            UpdatedBy = new Guid("ea294873-7a8c-4c0f-bfa7-a2eb492cbf8c"),
                            UpdatedDate = new DateTime(2024, 12, 28, 9, 56, 15, 416, DateTimeKind.Utc).AddTicks(5160)
                        },
                        new
                        {
                            Id = new Guid("1fbd0afe-4e8c-4b9a-8631-735107d30cb2"),
                            CreatedBy = new Guid("ea294873-7a8c-4c0f-bfa7-a2eb492cbf8c"),
                            CreatedDate = new DateTime(2024, 12, 28, 9, 56, 15, 416, DateTimeKind.Utc).AddTicks(5164),
                            DisplayName = "Power User",
                            IsDeleted = false,
                            Name = "POWER_USER",
                            UpdatedBy = new Guid("ea294873-7a8c-4c0f-bfa7-a2eb492cbf8c"),
                            UpdatedDate = new DateTime(2024, 12, 28, 9, 56, 15, 416, DateTimeKind.Utc).AddTicks(5164)
                        },
                        new
                        {
                            Id = new Guid("37d00899-66a7-4ed2-b8da-6ee0f8395201"),
                            CreatedBy = new Guid("ea294873-7a8c-4c0f-bfa7-a2eb492cbf8c"),
                            CreatedDate = new DateTime(2024, 12, 28, 9, 56, 15, 416, DateTimeKind.Utc).AddTicks(5166),
                            DisplayName = "General User",
                            IsDeleted = false,
                            Name = "GENERAL_USER",
                            UpdatedBy = new Guid("ea294873-7a8c-4c0f-bfa7-a2eb492cbf8c"),
                            UpdatedDate = new DateTime(2024, 12, 28, 9, 56, 15, 416, DateTimeKind.Utc).AddTicks(5167)
                        });
                });

            modelBuilder.Entity("DbsUsersManagementService.Models.Domain.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Teams", "identity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("54466f17-02af-48e7-8ed3-5a4a8bfacf6f"),
                            CreatedBy = new Guid("ea294873-7a8c-4c0f-bfa7-a2eb492cbf8c"),
                            CreatedDate = new DateTime(2024, 12, 28, 9, 56, 15, 416, DateTimeKind.Utc).AddTicks(5067),
                            IsDeleted = false,
                            Name = "Mocha",
                            UpdatedBy = new Guid("ea294873-7a8c-4c0f-bfa7-a2eb492cbf8c"),
                            UpdatedDate = new DateTime(2024, 12, 28, 9, 56, 15, 416, DateTimeKind.Utc).AddTicks(5069)
                        },
                        new
                        {
                            Id = new Guid("f808ddcd-b5e5-4d80-b732-1ca523e48434"),
                            CreatedBy = new Guid("ea294873-7a8c-4c0f-bfa7-a2eb492cbf8c"),
                            CreatedDate = new DateTime(2024, 12, 28, 9, 56, 15, 416, DateTimeKind.Utc).AddTicks(5100),
                            IsDeleted = false,
                            Name = "Latte",
                            UpdatedBy = new Guid("ea294873-7a8c-4c0f-bfa7-a2eb492cbf8c"),
                            UpdatedDate = new DateTime(2024, 12, 28, 9, 56, 15, 416, DateTimeKind.Utc).AddTicks(5100)
                        });
                });

            modelBuilder.Entity("DbsUsersManagementService.Models.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("TeamId");

                    b.ToTable("Users", "identity");
                });

            modelBuilder.Entity("DbsUsersManagementService.Models.Domain.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("UserRoles", "identity");
                });

            modelBuilder.Entity("DbsUsersManagementService.Models.Domain.User", b =>
                {
                    b.HasOne("DbsUsersManagementService.Models.Domain.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbsUsersManagementService.Models.Domain.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Team");
                });
#pragma warning restore 612, 618
        }
    }
}
